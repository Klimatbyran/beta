name: Continuous Integration

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: klimatbyran/frontend # FIXME restore to ${{ github.repository }} as soon as repos are merged

on:
  push:
    branches:
      - main
      - staging
    paths-ignore:
      - "k8s/**"

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          progress: false

      - name: üé´ Update patch version
        run: |
          git fetch
          BRANCH=$(echo ${GITHUB_REF#refs/heads/})  # Extract branch name
          git checkout $BRANCH
          git pull origin $BRANCH
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          if [[ $GITHUB_REF == refs/tags/production* ]]; then
            npm version major
          elif [[ $GITHUB_REF == refs/tags/staging* ]]; then
            npm version minor
          else
            npm version patch
          fi
          git fetch --all
          git push origin $BRANCH  # Push to the correct branch

  ci:
    runs-on: ubuntu-latest
    needs: version

    steps:
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          show-progress: false

      - id: imagename
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}

      - run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          if [[ $GITHUB_REF == refs/tags/production* ]]; then
            npm version major
          elif [[ $GITHUB_REF == refs/tags/staging* ]]; then
            npm version minor
          else
            npm version patch
          fi

      - name: üìù Get Current Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: üîê Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üîß Set NODE_ENV
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/staging" ]]; then
            echo "NODE_ENV=staging" >> $GITHUB_ENV
          else
            echo "NODE_ENV=production" >> $GITHUB_ENV
          fi

      - name: üìù Debug NODE_ENV
        run: echo "Using NODE_ENV=${NODE_ENV}"

      - name: üîß Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: NODE_ENV=${{ env.NODE_ENV }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.package-version.outputs.current-version}}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
