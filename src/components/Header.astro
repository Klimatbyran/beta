---
// Defining the base URL first
const baseURL = import.meta.env.DEV
  ? 'http://localhost:4321'
  : 'https://klimatkollen.se'

// Defining navigation items after baseURL
const navItems = [
  {
    href: `https://www.klimatkollen.se/kallor-och-metod`,
    label: 'KÃ¤llor och metod',
  },
  { href: `${baseURL}/om-oss`, label: 'Om oss' },
  { href: `https://klimatkollen.teamtailor.com/`, label: 'Jobb' },
  { href: `https://www.klimatkollen.se/in-english`, label: 'In English' },
  //{ href: `${baseURL}/menu`, label: 'Meny' },
]
---

<header
  class="bg-black h-18 fixed top-0 z-20 m-0 mb-1.5 w-full flex-shrink-0 pb-1.5 opacity-100"
>
  <div
    class="relative flex h-12 max-w-screen-2xl items-center justify-between px-4"
  >
    <div
      class="absolute left-1/2 top-1/2 z-[30] flex h-8 -translate-x-1/2 -translate-y-1/2 pt-1"
    >
      <a href="https://klimatkollen.se" class="flex items-center">
        <img
          src="/klimatkollen_logo.svg"
          alt="Klimatkollen logga"
          width="150"
          class="pt-1"
        />
      </a>
    </div>

    <nav
      class="ml-auto hidden h-[var(--btn-size)] list-none items-center gap-6 lg:flex"
    >
      {
        navItems.map((item) => (
          <a href={item.href} class="nav-link">
            {item.label}
          </a>
        ))
      }
    </nav>

    <!-- Mobile Hamburger Menu -->
    <div class="relative ml-auto block h-8 lg:hidden">
      <button type="button" class="hamburger-button">
        <img src="/icons/menu.svg" alt="Menu Icon" width="32" height="32" />
      </button>
    </div>
  </div>

  <!-- Fullscreen Menu
     I removed as many custom CSS classes as possible to switch to Tailwind, 
     but these two were more challenging. They involve interactivity 
     (e.g., toggling visibility) and require JS logic to handle dynamic 
     behavior based on screen size and state. -->

  <div
    class="fullscreen-menu bg-black text-white fixed left-0 top-0 z-[9999] flex hidden h-full w-full flex-col p-8 pl-4 pt-0"
  >
    <!-- Using only Tailwind classes requires adding JavaScript logic to toggle the visibility of the separator line based on screen modes or menu state. 
  We can either:
  1. Remove the separator entirely if it's not needed, or
  2. Keep the current implementation with custom CSS, which already handles the conditional visibility. -->

    <div class="separator"></div>

    <button class="close-menu">
      <div class="close-icon-wrapper">
        <img
          src="/icons/close_round.svg"
          alt="Close Icon"
          width="32"
          height="32"
          class="close-icon"
        />
      </div>
    </button>

    <nav>
      {
        navItems.map((item) => (
          <a href={item.href} class="hamburger-link">
            {item.label}
          </a>
        ))
      }
    </nav>
  </div>

  <!-- Importing and using Svelte's built in hamburger menus required Svelte version 5, 
   so instead I simplified the toggle logic -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const fullscreenMenu = document.querySelector('.fullscreen-menu')
      fullscreenMenu?.classList.add('hidden')

      document
        .querySelectorAll('.hamburger-button, .close-menu')
        .forEach((button) =>
          button?.addEventListener('click', () =>
            fullscreenMenu?.classList.toggle('hidden'),
          ),
        )
    })
  </script>

  <style>
    /* header.css */
    .nav-link {
      position: relative;
      color: white;
      text-decoration: none;
    }

    .nav-link::after {
      content: '';
      display: block;
      block-size: 2px;
      background-color: white;
      position: absolute;
      inset-inline-start: 0;
      inset-block-end: -2px;
      inline-size: 100%;
      transform: scaleX(0);
      transition: transform 0.3s ease;
    }

    .nav-link:hover::after {
      transform: scaleX(1);
    }

    /* Variables */
    :root {
      --header-padding: 0.5rem;
      --btn-size: 2rem;
      --black-bg: #000;
      --white-color: #fff;
      --gray-border: #aaa;
    }

    /* .header-logo {
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    block-size: var(--btn-size);
    padding-block-start: 4px;
    z-index: 10000;
    height: auto;
  } */

    /* .nav-list {
    display: none;
    list-style: none;
    margin-inline-start: auto;
    block-size: var(--btn-size);
    align-items: center;
    gap: 1.5rem;
  }

  @media only screen and (min-width: 1024px) {
    .nav-list {
      display: flex;
    }
  } */

    .nav-item {
      font-size: 1rem;
    }

    .nav-link {
      text-decoration: none;
      color: var(--white-color);
    }

    /* .hamburger-menu {
    display: block;
    margin-inline-start: auto;
    block-size: var(--btn-size);
    position: relative;
  }

  @media only screen and (min-width: 1024px) {
    .hamburger-menu {
      display: none;
    }
  } */

    .fullscreen-menu {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 1);
      color: white;
      display: flex;
      flex-direction: column;
      z-index: 25;
      padding: 2rem 1rem 0 1rem;
    }

    /* Logo styling inside fullscreen menu */
    /* .fullscreen-menu .header-logo {
    position: absolute;
    top: 1rem;
    left: 1rem;
    z-index: 1000;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  } */

    .fullscreen-menu.hidden {
      transform: translateX(-100%);
    }

    .fullscreen-menu nav {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
      margin-block-start: 2rem;
      z-index: 20;
    }
    /* Navigation links in the fullscreen menu */
    /* .fullscreen-menu .nav-link {
    font-size: 1.2rem;
    padding: 0.8rem 0;
    color: white;
    text-decoration: none;
    text-align: left;
    width: 100%;
    position: relative;
    display: inline-block;
    transition: color 0.3s ease;
  } */

    /* Initial underline effect using ::before */
    .fullscreen-menu .nav-link::before {
      content: '';
      display: block;
      block-size: 2px;
      background-color: white;
      position: absolute;
      inset-inline-start: 0;
      inset-block-end: -2px;
      inline-size: 100%;
      transform: scaleX(0);
      transition: transform 0.4s ease;
    }

    /* Hover underline effect using ::after */
    .fullscreen-menu .nav-link::after {
      content: '';
      display: block;
      block-size: 2px;
      background-color: white;
      position: absolute;
      inset-inline-start: 0;
      inset-block-end: -2px;
      inline-size: 100%;
      transform: scaleX(0);
      transition: transform 0.4s ease;
    }

    /* Hover effect to show the dynamic underline and hide the initial one */
    .fullscreen-menu .nav-link:hover::after {
      transform: scaleX(1);
    }

    .fullscreen-menu .nav-link:hover::before {
      display: none;
    }

    /* Adjustments when the menu is opened */
    .fullscreen-menu.open .nav-link::after {
      transform: scaleX(1);
    }

    .fullscreen-menu.open .nav-link::before {
      display: none;
    }

    .hamburger-link {
      color: var(--white-color);
      text-decoration: none;
      font-size: 1.2rem;
    }

    .hamburger-link:hover {
      text-decoration: underline;
    }

    /* Close button */
    .close-menu {
      position: fixed;
      inset-block-start: var(--header-padding);
      inset-inline-end: var(--header-padding);
      background: none;
      border: none;
      cursor: pointer;
      color: var(--white-color);
      z-index: 30;
    }

    /* Separator line in full-screen menu */
    .separator {
      z-index: 10;
      margin-top: 1rem;
    }

    @media (max-width: 768px) {
      .separator {
        top: 60px;
      }
    }

    .fullscreen-menu .separator {
      position: relative;
      top: 0;
      width: 100%;
      height: 2px;
      background-color: grey;
      display: none;
    }

    .fullscreen-menu:not(.hidden) .separator {
      display: block;
    }
    /* Full-screen menu items */
    .hamburger-item {
      padding: 1rem 0;
      font-size: 1.5rem;
      list-style-type: none;
    }

    /* Default font size */
    .fullscreen-menu .hamburger-link {
      font-size: 1.5rem;
    }
  </style>
</header>
