---
import Fa6SolidGifts from 'icons:astro/fa6-solid/gifts'
import MingcuteWashMachineLine from 'icons:astro/mingcute/wash-machine-line'
import IconParkOutlineSolarEnergyOne from 'icons:astro/icon-park-outline/solar-energy-one'
import IconParkOutlineTransport from 'icons:astro/icon-park-outline/transport'
import MakiWasteBasket from 'icons:astro/maki/waste-basket'
import ZondiconsTravelTrain from 'icons:astro/zondicons/travel-train'
import MaterialSymbolsCommuteOutline from 'icons:astro/material-symbols/commute-outline'
import IconParkOutlineWashingMachineOne from 'icons:astro/icon-park-outline/washing-machine-one'
import IconParkOutlineTransporter from 'icons:astro/icon-park-outline/transporter'
import IconParkOutlineGateMachine from 'icons:astro/icon-park-outline/gate-machine'
import MaterialSymbolsPersonPlayOutlineRounded from 'icons:astro/material-symbols/person-play-outline-rounded'
import IonTrashBin from 'icons:astro/ion/trash-bin'
import ClarityBuildingSolid from 'icons:astro/clarity/building-solid'
import BiHouses from 'icons:astro/bi/houses'
import StreamlineInvestmentSelection from 'icons:astro/streamline/investment-selection'

import {
  type CompanyData,
  type Emissions,
  type Scope3,
} from '@/data/companyData'
import Scope3EmissionsCategory from '../company/Scope3EmissionsCategory.astro'
import { Card } from '../ui/card'

interface Props {
  company: CompanyData
  emissions: Emissions
}

const { company, emissions } = Astro.props

type CategoryDefinition = {
  title: string
  description: string
  Icon: astroHTML.JSX.Element
}

type ReportedCategoryDefinition = CategoryDefinition & {
  value: number | null
  verified: boolean
}

export const categoryDefinitions = {
  '1_purchasedGoods': {
    title: '1. Inköpta varor och tjänster',
    description:
      'Utsläpp från produktion av varor och tjänster som köps av organisationen.',
    Icon: Fa6SolidGifts,
  },
  '2_capitalGoods': {
    title: '2. Kapitalvaror',
    description:
      'Utsläpp från produktion av kapitalvaror som köps av organisationen.',
    Icon: MingcuteWashMachineLine,
  },
  '3_fuelAndEnergyRelatedActivities': {
    title: '3. Bränsle- och energirelaterade aktiviteter',
    description:
      'Utsläpp från produktion av bränslen och energi som köps av organisationen, inklusive transport och distribution, som inte inkluderas i scope 2.',
    Icon: IconParkOutlineSolarEnergyOne,
  },
  '4_upstreamTransportationAndDistribution': {
    title: '4. Uppströms transport och distribution',
    description:
      'Utsläpp från transport och distribution av inköpta varor mellan leverantörer och/eller inom organisationen.',
    Icon: IconParkOutlineTransport,
  },
  '5_wasteGeneratedInOperations': {
    title: '5. Avfall genererat i verksamheten',
    description:
      'Utsläpp från behandling av avfall som genereras av organisationen.',
    Icon: MakiWasteBasket,
  },
  '6_businessTravel': {
    title: '6. Tjänsteresor',
    description:
      'Utsläpp från resor i tjänsten med fordon som inte ägs av organisationen.',
    Icon: ZondiconsTravelTrain,
  },
  '7_employeeCommuting': {
    title: '7. Pendlingsresor',
    description:
      'Utsläpp från anställdas resor mellan hemmet och arbetsplatsen.',
    Icon: MaterialSymbolsCommuteOutline,
  },
  '8_upstreamLeasedAssets': {
    title: '8. Uppströms leasade tillgångar',
    description:
      'Utsläpp från verksamhet i leasade tillgångar som inte inkluderas i scope 1 och 2.',
    Icon: IconParkOutlineWashingMachineOne,
  },
  '9_downstreamTransportationAndDistribution': {
    title: '9. Nedströms transport och distribution',
    description:
      'Utsläpp från transport och distribution av sålda varor mellan organisationen och kund.',
    Icon: IconParkOutlineTransporter,
  },
  '10_processingOfSoldProducts': {
    title: '10. Bearbetning av sålda produkter',
    description: 'Utsläpp från vidareförädling av sålda insatsvaror.',
    Icon: IconParkOutlineGateMachine,
  },
  '11_useOfSoldProducts': {
    title: '11. Användning av sålda produkter',
    description: 'Utsläpp från användning av sålda produkter av kunden.',
    Icon: MaterialSymbolsPersonPlayOutlineRounded,
  },
  '12_endOfLifeTreatmentOfSoldProducts': {
    title: '12. Slutbehandling av sålda produkter',
    description:
      'Utsläpp från avfallshantering av sålda produkter vid slutet av livscykeln.',
    Icon: IonTrashBin,
  },
  '13_downstreamLeasedAssets': {
    title: '13. Nedströms leasade tillgångar',
    description:
      'Utsläpp från verksamhet i nedströms leasade tillgångar som inte inkluderas i scope 1 och 2.',
    Icon: ClarityBuildingSolid,
  },
  '14_franchises': {
    title: '14. Franchiser',
    description:
      'Utsläpp från franchisetagares verksamhet som inte inkluderas i scope 1 och 2.',
    Icon: BiHouses,
  },
  '15_investments': {
    title: '15. Investeringar',
    description:
      'Utsläpp från organisationens investeringar i andra företag, samt andra finansierade utsläpp.',
    Icon: StreamlineInvestmentSelection,
  },
}

function getReportedCategories(scope3: Scope3): ReportedCategoryDefinition[] {
  return Object.entries(categoryDefinitions).map(([key, definition]) => {
    const categoryId = parseInt(key.split('_')[0])
    const category = scope3.categories?.find(
      ({ category }) => category === categoryId,
    )
    const value = category?.total ?? null
    const verified = Boolean(category?.metadata?.verifiedBy)

    return {
      ...definition,
      value,
      verified,
      // TODO: render metadata with a shared component to provide more context for each datapoint.
      // This should be updated for all datapoints,and replace `verified: boolean`.
    }
  })
}

const reportedCategories = emissions.scope3
  ? getReportedCategories(emissions.scope3)
  : []
const reportedCount = reportedCategories.filter((c) => c.value !== null).length

const upstream = reportedCategories.slice(0, 8)
const downstream = reportedCategories.slice(8)
---

<Card class="grid gap-8" level={2}>
  <div>
    <h3
      class="text-balance pb-2 text-xl tracking-tight sm:leading-none lg:text-2xl"
    >
      {company.name} rapporterar
      <span class="text-nowrap">
        <span class="text-orange-250">{reportedCount}</span> / 15
      </span>
      kategorier i scope 3:
    </h3>

    <p class="text-sm text-muted">
      Ustläppen i scope 3 delas upp i 15 kategorier. Företag bör rapportera i
      alla kategorier som är relevanta för verksamheten.
    </p>
  </div>

  {
    upstream.length ? (
      <div class="grid gap-2 text-sm">
        <h4 class="flex items-center justify-between pb-2 text-lg leading-none tracking-tight">
          Uppströms
          <span class="pr-4 text-base text-muted xs:text-lg">(ton CO₂e)</span>
        </h4>
        {upstream.map(({ Icon, title, description, value, verified }) => (
          <Scope3EmissionsCategory
            {Icon}
            {title}
            {description}
            {verified}
            {value}
          />
        ))}
      </div>
    ) : null
  }

  {
    downstream.length ? (
      <div class="grid gap-2 text-sm">
        <h4 class="flex items-center justify-between pb-2 text-lg leading-none tracking-tight">
          Nedströms
          <span class="pr-4 text-base text-muted xs:text-lg">(ton CO₂e)</span>
        </h4>
        {downstream.map(({ Icon, title, description, value, verified }) => (
          <Scope3EmissionsCategory
            {Icon}
            {title}
            {description}
            {verified}
            {value}
          />
        ))}
        {/* TODO: Should we show the `other` category at the bottom? This would make it clear why the total for scope 3 might be larger than the GHG categories combined, and ideally the difference would be visible as part of `other` */}
      </div>
    ) : null
  }
</Card>
